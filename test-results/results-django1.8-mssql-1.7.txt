
(env) C:\Users\misha\pyprojects\django-sqlserver>if not defined DJANGO_VER set DJANGO_VER=1.7 

(env) C:\Users\misha\pyprojects\django-sqlserver>if defined PYTHONHOME (set virtualenv=\scripts\virtualenv )  else (set virtualenv=virtualenv ) 

(env) C:\Users\misha\pyprojects\django-sqlserver>virtualenv env --system-site-packages 
Using base prefix 'E:\\apps\\Python34-x86'
New python executable in env\Scripts\python.exe
Installing setuptools, pip, wheel...done.

(env) C:\Users\misha\pyprojects\django-sqlserver>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver>set PYTHONHOME= 

(env) C:\Users\misha\pyprojects\django-sqlserver>set django_branch=stable/1.8.x 

(env) C:\Users\misha\pyprojects\django-sqlserver>if not exist env\src\django call git clone https://github.com/django/django.git env/src/django 

(env) C:\Users\misha\pyprojects\django-sqlserver>pushd env\src\django 

(env) C:\Users\misha\pyprojects\django-sqlserver\env\src\django>call git pull 
From https://github.com/django/django
   9a2aca6..9788625  master     -> origin/master
   10d18de..16c1075  stable/1.8.x -> origin/stable/1.8.x
   1686578..8e23527  stable/1.9.x -> origin/stable/1.9.x
Already up-to-date.

(env) C:\Users\misha\pyprojects\django-sqlserver\env\src\django>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver\env\src\django>call git checkout stable/1.8.x 
Your branch is behind 'origin/stable/1.8.x' by 3 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
Switched to branch 'stable/1.8.x'

(env) C:\Users\misha\pyprojects\django-sqlserver\env\src\django>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver\env\src\django>popd

(env) C:\Users\misha\pyprojects\django-sqlserver>env\scripts\pip install -e env\src\django 
Obtaining file:///C:/Users/misha/pyprojects/django-sqlserver/env/src/django
Installing collected packages: Django
  Running setup.py develop for Django
Successfully installed Django-1.8.7.dev20151111215326

(env) C:\Users\misha\pyprojects\django-sqlserver>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver>if not exist pytds call git clone https://github.com/denisenkom/pytds.git 

(env) C:\Users\misha\pyprojects\django-sqlserver>pushd pytds 

(env) C:\Users\misha\pyprojects\django-sqlserver\pytds>call git pull 
Already up-to-date.

(env) C:\Users\misha\pyprojects\django-sqlserver\pytds>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver\pytds>popd

(env) C:\Users\misha\pyprojects\django-sqlserver>env\scripts\pip install -e .\pytds 
Obtaining file:///C:/Users/misha/pyprojects/django-sqlserver/pytds
Requirement already satisfied (use --upgrade to upgrade): six>=1.4.1 in e:\apps\python34-x86\lib\site-packages (from python-tds===1.8.1-1-gc301)
Installing collected packages: python-tds
  Running setup.py develop for python-tds
Successfully installed python-tds-1.8.1-1-gc301

(env) C:\Users\misha\pyprojects\django-sqlserver>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver>env\scripts\pip install pytz==2013d 
Requirement already satisfied (use --upgrade to upgrade): pytz==2013d in c:\users\misha\pyprojects\django-sqlserver\env\lib\site-packages

(env) C:\Users\misha\pyprojects\django-sqlserver>if 0 NEQ 0 exit /b 0 

(env) C:\Users\misha\pyprojects\django-sqlserver>set COMPUTERNAME= 

(env) C:\Users\misha\pyprojects\django-sqlserver>env\scripts\python tests\runtests.py --noinput --settings=test_mssql 
Traceback (most recent call last):
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\utils.py", line 112, in load_backend
    return import_module('%s.base' % backend_name)
  File "C:\Users\misha\pyprojects\django-sqlserver\env\lib\importlib\__init__.py", line 109, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 2254, in _gcd_import
  File "<frozen importlib._bootstrap>", line 2237, in _find_and_load
  File "<frozen importlib._bootstrap>", line 2226, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 1200, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 1129, in _exec
  File "<frozen importlib._bootstrap>", line 1471, in exec_module
  File "<frozen importlib._bootstrap>", line 321, in _call_with_frames_removed
  File "C:\Users\misha\pyprojects\django-sqlserver\sqlserver\base.py", line 9, in <module>
    import sqlserver_ado.base
  File "C:\Users\misha\pyprojects\django-sqlserver\env\lib\site-packages\sqlserver_ado\base.py", line 7, in <module>
    from django.db.backends import BaseDatabaseWrapper, BaseDatabaseFeatures, BaseDatabaseValidation, BaseDatabaseClient
ImportError: cannot import name 'BaseDatabaseWrapper'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tests\runtests.py", line 496, in <module>
    options.failfast, args)
  File "tests\runtests.py", line 321, in django_tests
    state = setup(verbosity, test_labels)
  File "tests\runtests.py", line 246, in setup
    django.setup()
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\__init__.py", line 18, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\apps\registry.py", line 108, in populate
    app_config.import_models(all_models)
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\apps\config.py", line 198, in import_models
    self.models_module = import_module(models_module_name)
  File "C:\Users\misha\pyprojects\django-sqlserver\env\lib\importlib\__init__.py", line 109, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 2254, in _gcd_import
  File "<frozen importlib._bootstrap>", line 2237, in _find_and_load
  File "<frozen importlib._bootstrap>", line 2226, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 1200, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 1129, in _exec
  File "<frozen importlib._bootstrap>", line 1471, in exec_module
  File "<frozen importlib._bootstrap>", line 321, in _call_with_frames_removed
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\contrib\auth\models.py", line 41, in <module>
    class Permission(models.Model):
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\models\base.py", line 139, in __new__
    new_class.add_to_class('_meta', Options(meta, **kwargs))
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\models\base.py", line 324, in add_to_class
    value.contribute_to_class(cls, name)
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\models\options.py", line 250, in contribute_to_class
    self.db_table = truncate_name(self.db_table, connection.ops.max_name_length())
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\__init__.py", line 36, in __getattr__
    return getattr(connections[DEFAULT_DB_ALIAS], item)
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\utils.py", line 241, in __getitem__
    backend = load_backend(db['ENGINE'])
  File "c:\users\misha\pyprojects\django-sqlserver\env\src\django\django\db\utils.py", line 130, in load_backend
    raise ImproperlyConfigured(error_msg)
django.core.exceptions.ImproperlyConfigured: 'sqlserver' isn't an available database backend.
Try using 'django.db.backends.XXX', where XXX is one of:
    'base', 'mysql', 'oracle', 'postgresql_psycopg2', 'sqlite3'
Error was: cannot import name 'BaseDatabaseWrapper'
